{"version":3,"sources":["images/1_HTC1oMKYwC7a8vUBsiplhw.gif","components/Home.jsx","images/cryptocurrency.png","components/NavBar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Homepage.jsx","services/exchangesApi.js","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/AllRoutes.jsx","App.js","app/store.js","index.js"],"names":["Home","_jsxs","children","_jsx","Typography","Title","className","Image","height","width","style","zIndex","position","top","left","src","icon","NavBar","_useState","useState","_useState2","_slicedToArray","activeMenu","setActiveMenu","_useState3","_useState4","screenSize","setScreenSize","_useState5","_useState6","clicked","setClicked","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","Avatar","size","level","Link","to","Button","onClick","MenuOutlined","Menu","theme","Item","HomeOutlined","last","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","concat","getCryptoDetails","coinId","getCryptoHistory","_ref","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Spin","Cryptocurrencies","simplified","_useGetCryptosQuery","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","_cryptosList$data","filteredData","coins","filter","coin","name","toLowerCase","includes","_Fragment","Input","placeholder","onChange","e","target","value","Row","gutter","length","Card","map","currency","Col","xs","sm","lg","uuid","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Homepage","_data$data","globalStats","stats","span","Statistic","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","News","exchangesApiHeaders","exchangesApi","getExchanges","useGetExchangesQuery","Text","Panel","Collapse","Exchanges","_useGetExchangesQuery","cryptoExchanges","exchangesList","exchange","accordion","showArrow","header","trust_score_rank","image","year_established","trade_volume_24h_btc","trust_score","description","country","id","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Option","Select","demoImage","setNewsCategory","_useGetCryptoNewsQuer","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","indexOf","news","i","_news$image","_news$image$thumbnail","_news$provider$","_news$provider$$image","_news$provider$$image2","_news$provider$2","href","rel","thumbnail","contentUrl","maxWidth","maxHeight","substring","provider","moment","datePublished","startOf","fromNow","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","LineChart","_coinHistory$data4","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","console","log","_coinHistory$data","_coinHistory$data$his","history","_coinHistory$data2","_coinHistory$data3","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","Line","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","_useGetCryptoDetailsQ","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","_ref2","HTMLReactParser","links","link","type","AllRoutes","Layout","Routes","Route","path","color","textAlign","Space","App","show","setShow","UpCircleOutlined","configureStore","reducer","_reducer","_defineProperty","middleware","getDefaultMiddleware","ReactDOM","render","Router","basename","Provider","store","document","getElementById"],"mappings":"kOAAe,G,OAAA,IAA0B,sD,OCgB1BA,EAXF,WACX,OACEC,eAAA,OAAAC,SAAA,CACEC,cAACC,IAAWC,MAAK,CAACC,UAAU,OAAMJ,SAAC,gCAGnCC,cAACI,IAAK,CAACC,OAAQ,QAASC,MAAO,QAASC,MAAO,CAACC,OAAO,KAAKC,SAAS,QAASC,IAAI,IAAKC,KAAM,KAAMC,IAAKC,MAG9G,E,2GCde,MAA0B,2CC8D1BC,EAnDA,WACb,IAAAC,EAAoCC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAAoCL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAA3CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA6BT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAjCE,EAAOD,EAAA,GAACE,EAAUF,EAAA,GAezB,OAdAG,qBAAU,WACR,IAAMC,EAAe,WAAH,OAASN,EAAcO,OAAOC,WAAY,EAG5D,OAFAD,OAAOE,iBAAiB,SAAUH,GAClCA,IACO,kBAAMC,OAAOG,oBAAoB,SAAUJ,EAAc,CAClE,GAAG,IAEHD,qBAAU,WAENT,IADEG,EAAa,KAKnB,GAAG,CAACA,EAAWI,IAEb7B,eAAA,OAAKK,UAAU,gBAAeJ,SAAA,CAC5BD,eAAA,OAAKK,UAAU,iBAAgBJ,SAAA,CAC7BC,cAACmC,IAAM,CAACvB,IAAKC,EAAMuB,KAAK,UACxBpC,cAACC,IAAWC,MAAK,CAACmC,MAAO,EAAGlC,UAAU,OAAMJ,SAC1CC,cAACsC,IAAI,CAACC,GAAG,gBAAexC,SAAC,mBAE3BC,cAACwC,IAAM,CACLrC,UAAU,yBACVsC,QAAS,kBAAMrB,GAAeD,EAAW,EAACpB,SAE1CC,cAAC0C,IAAY,SAGhBvB,GACCrB,eAAC6C,IAAI,CAACC,MAAM,OAAM7C,SAAA,CAChBC,cAAC2C,IAAKE,KAAI,CAAChC,KAAMb,cAAC8C,IAAY,IAAI/C,SAChCC,cAACsC,IAAI,CAACG,QAAS,kBAAKb,GAAW,SAACmB,GAAI,OAAGA,EAAK,CAAC,GAAC,EAAER,GAAG,gBAAexC,SAAC,WAErEC,cAAC2C,IAAKE,KAAI,CAAChC,KAAMb,cAACgD,IAAY,IAAIjD,SAChCC,cAACsC,IAAI,CAACG,QAAS,kBAAKb,GAAW,SAACmB,GAAI,OAAGA,EAAK,CAAC,GAAC,EAAER,GAAG,iCAAgCxC,SAAC,uBAEtFC,cAAC2C,IAAKE,KAAI,CAAChC,KAAMb,cAACiD,IAAoB,IAAIlD,SACxCC,cAACsC,IAAI,CAACG,QAAS,kBAAKb,GAAW,SAACmB,GAAI,OAAGA,EAAK,CAAC,GAAC,EAAER,GAAG,0BAAyBxC,SAAC,gBAE/EC,cAAC2C,IAAKE,KAAI,CAAChC,KAAMb,cAACkD,IAAY,IAAInD,SAChCC,cAACsC,IAAI,CAACG,QAAS,kBAAKb,GAAW,SAACmB,GAAI,OAAGA,EAAK,CAAC,GAAC,EAAER,GAAG,qBAAoBxC,SAAC,gBAMpF,E,qEC3DMoD,EAAmB,CACvB,kBAAmB,8BACnB,iBAAkB,sDAIdC,EAAgB,SAACC,GAAG,MAAM,CAC9BA,MACAC,QAASH,EACV,EAEYI,EAAYC,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QATd,wCAUdC,UAAW,SAACC,GAAO,MAAM,CACvBC,WAAYD,EAAQE,MAAM,CACxBA,MAAO,SAACC,GAAK,OAAKb,EAAc,gBAADc,OAAiBD,GAAQ,IAE1DE,iBAAkBL,EAAQE,MAAM,CAC9BA,MAAO,SAACI,GAAM,OAAKhB,EAAc,SAADc,OAAUE,GAAS,IAErDC,iBAAkBP,EAAQE,MAAM,CAC9BA,MAAO,SAAAM,GAAA,IAAGF,EAAME,EAANF,OAAQG,EAAUD,EAAVC,WAAU,OAC1BnB,EAAc,SAADc,OAAUE,EAAM,wBAAAF,OAAuBK,GAAa,IAEtE,IAIDC,EAGEjB,EAHFiB,mBACAC,EAEElB,EAFFkB,yBACAC,EACEnB,EADFmB,yB,SCtBaC,EARA,WACb,OACE3E,cAAA,OAAKG,UAAU,SAAQJ,SACrBC,cAAC4E,IAAI,KAGX,EC0CeC,EA5CU,SAAHP,GAAwB,IAAlBQ,EAAUR,EAAVQ,WAG1BC,EAA0CP,EAF5BM,EAAa,GAAK,IAElBE,EAAWD,EAAjBE,KAAmBC,EAAUH,EAAVG,WAC3BnE,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCoE,EAAOlE,EAAA,GAAEmE,EAAUnE,EAAA,GAC1BI,EAAoCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAzCgE,EAAU/D,EAAA,GAAEgE,EAAahE,EAAA,GAOhC,OANAO,qBAAU,WAAO,IAAD0D,EACRC,EAA0B,OAAXR,QAAW,IAAXA,GAAiB,QAANO,EAAXP,EAAaC,YAAI,IAAAM,OAAN,EAAXA,EAAmBE,MAAMC,QAAO,SAACC,GAAI,OACxDA,EAAKC,KAAKC,cAAcC,SAAST,EAAWQ,cAAc,IAE5DT,EAAWI,EACb,GAAG,CAACR,EAAaK,IACbH,EAAmBlF,cAAC2E,EAAM,IAE5B7E,eAAAiG,WAAA,CAAAhG,SAAA,EACI+E,GACA9E,cAAA,OAAKG,UAAU,gBAAeJ,SAC5BC,cAACgG,IAAK,CACJC,YAAY,wBACZC,SAAU,SAACC,GAAC,OAAKb,EAAca,EAAEC,OAAOC,MAAM,MAIpDrG,cAACsG,IAAG,CAACC,OAAQ,CAAC,GAAI,IAAKpG,UAAU,wBAAuBJ,SACpC,IAAZ,OAAPoF,QAAO,IAAPA,OAAO,EAAPA,EAASqB,QAAcxG,cAACyG,IAAI,CAACtG,UAAU,WAAUJ,SAAC,qCAAiD,OAAPoF,QAAO,IAAPA,OAAO,EAAPA,EAASuB,KAAI,SAACC,GAAQ,OAC/G3G,cAAC4G,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG5G,UAAU,cAAaJ,SACjDC,cAACsC,IAAI,CAACC,GAAE,wBAAA2B,OAA0ByC,EAASK,MAAOjH,SAChDD,eAAC2G,IAAI,CACHQ,MAAK,GAAA/C,OAAKyC,EAASO,KAAI,MAAAhD,OAAKyC,EAASf,MACrCuB,MAAOnH,cAAA,OAAKG,UAAU,eAAeS,IAAK+F,EAASS,QAASC,IAAI,SAChEC,WAAS,EAAAvH,SAAA,CAETD,eAAA,KAAAC,SAAA,CAAG,UAAQwH,IAAQZ,EAASa,UAC5B1H,eAAA,KAAAC,SAAA,CAAG,eAAawH,IAAQZ,EAASc,cACjC3H,eAAA,KAAAC,SAAA,CAAG,iBAAewH,IAAQZ,EAASe,QAAQ,cATQf,EAASK,KAY5D,QAKhB,E,SCxCQ9G,EAAUD,IAAVC,MA6DOyH,EA5DE,WAAO,IAADC,EACrB7C,EAA6BP,EAAmB,IAAxCS,EAAIF,EAAJE,KACR,GADwBF,EAAVG,WACE,OAAOlF,cAAC2E,EAAM,IAC9B,IAAMkD,EAAkB,OAAJ5C,QAAI,IAAJA,GAAU,QAAN2C,EAAJ3C,EAAMA,YAAI,IAAA2C,OAAN,EAAJA,EAAYE,MAChC,OACEhI,eAAAiG,WAAA,CAAAhG,SAAA,CACEC,cAACE,EAAK,CAACmC,MAAO,EAAGlC,UAAU,UAASJ,SAAC,wBAGrCD,eAACwG,IAAG,CAAAvG,SAAA,CACFC,cAAC4G,IAAG,CAACmB,KAAM,GAAGhI,SACZC,cAACgI,IAAS,CAACf,MAAM,yBAAyBZ,MAAOwB,EAAYI,UAE/DjI,cAAC4G,IAAG,CAACmB,KAAM,GAAGhI,SACZC,cAACgI,IAAS,CACRf,MAAM,kBACNZ,MAAOkB,IAAQM,EAAYK,oBAG/BlI,cAAC4G,IAAG,CAACmB,KAAM,GAAGhI,SACZC,cAACgI,IAAS,CACRf,MAAM,mBACNZ,MAAOkB,IAAQM,EAAYM,oBAG/BnI,cAAC4G,IAAG,CAACmB,KAAM,GAAGhI,SACZC,cAACgI,IAAS,CACRf,MAAM,mBACNZ,MAAOkB,IAAQM,EAAYO,oBAG/BpI,cAAC4G,IAAG,CAACmB,KAAM,GAAGhI,SACZC,cAACgI,IAAS,CACRf,MAAM,gBACNZ,MAAOkB,IAAQM,EAAYQ,qBAIjCvI,eAAA,OAAKK,UAAU,yBAAwBJ,SAAA,CACrCC,cAACE,EAAK,CAACmC,MAAO,EAAGlC,UAAU,aAAYJ,SAAC,yCAGxCC,cAACE,EAAK,CAACmC,MAAO,EAAGlC,UAAU,YAAWJ,SACpCC,cAACsC,IAAI,CAACC,GAAG,iCAAgCxC,SAAC,mBAG9CC,cAAC6E,EAAgB,CAACC,YAAU,IAC5BhF,eAAA,OAAKK,UAAU,yBAAwBJ,SAAA,CACrCC,cAACE,EAAK,CAACmC,MAAO,EAAGlC,UAAU,aAAYJ,SAAC,uBAGxCC,cAACE,EAAK,CAACmC,MAAO,EAAGlC,UAAU,YAAWJ,SACpCC,cAACsC,IAAI,CAACC,GAAG,qBAAoBxC,SAAC,mBAGlCC,cAACsI,GAAI,CAACxD,YAAU,MAGtB,E,kBCnEMyD,EAAsB,CACxB,kBAAmB,2BACnB,iBAAkB,sDAUTC,EAAehF,YAAU,CACpCC,YAAa,eACbC,UAAWC,YAAe,CAAEC,QATd,qCAUdC,UAAW,SAACC,GAAO,MAAM,CACvB2E,aAAc3E,EAAQE,MAAM,CAC1BA,MAAO,iBAVmB,CAC9BX,IAS+B,aAR/BC,QAASiF,EAQmC,IAE3C,IAGYG,EAAyBF,EAAzBE,qBCfPC,EAAS1I,IAAT0I,KACAC,EAAUC,IAAVD,MAmDOE,GAjDG,WAChB,IAAAC,EAA8CL,IAAhCM,EAAeD,EAArB9D,KACR,GADyC8D,EAAV7D,WACf,OAAOlF,cAAC2E,EAAM,IAC9B,IAAMsE,EAAgBD,EACtB,OACElJ,eAAAiG,WAAA,CAAAhG,SAAA,CACED,eAACwG,IAAG,CAAAvG,SAAA,CACFC,cAAC4G,IAAG,CAACmB,KAAM,EAAEhI,SAAC,cACdC,cAAC4G,IAAG,CAACmB,KAAM,EAAEhI,SAAC,qBACdC,cAAC4G,IAAG,CAACmB,KAAM,EAAEhI,SAAC,qBACdC,cAAC4G,IAAG,CAACmB,KAAM,EAAEhI,SAAC,mBAEhBC,cAACsG,IAAG,CAAAvG,SACDkJ,EAAcvC,KAAI,SAACwC,GAAQ,OAC1BlJ,cAAC4G,IAAG,CAACmB,KAAM,GAAGhI,SACZC,cAAC6I,IAAQ,CAACM,WAAS,EAAApJ,SACjBC,cAAC4I,EAAK,CAEJQ,WAAW,EACXC,OACEvJ,eAACwG,IAAG,CAAAvG,SAAA,CACFD,eAAC8G,IAAG,CAACmB,KAAM,EAAEhI,SAAA,CACXC,cAAC2I,EAAI,CAAA5I,SACHD,eAAA,UAAAC,SAAA,CAASmJ,EAASI,iBAAiB,SAErCtJ,cAACmC,IAAM,CACLhC,UAAU,iBACVS,IAAKsI,EAASK,QAEhBvJ,cAAC2I,EAAI,CAAA5I,SACHC,cAAA,UAAAD,SAASmJ,EAAStD,YAGtB5F,cAAC4G,IAAG,CAACmB,KAAM,EAAEhI,SAAEmJ,EAASM,mBACxBxJ,cAAC4G,IAAG,CAACmB,KAAM,EAAEhI,SAAEwH,IAAQ2B,EAASO,wBAChCzJ,cAAC4G,IAAG,CAACmB,KAAM,EAAEhI,SAAEmJ,EAASQ,iBAE3B3J,UAEQ,OAARmJ,QAAQ,IAARA,OAAQ,EAARA,EAAUS,cAAW,GAAAzF,OAAe,OAARgF,QAAQ,IAARA,OAAQ,EAARA,EAAUU,QAAO,OAAA1F,OAAc,OAARgF,QAAQ,IAARA,OAAQ,EAARA,EAAU7F,MAAS,IAtBlE6F,EAASW,OAyBd,QAKhB,E,+BCzDMC,GAAuB,CAC3B,iBAAkB,OAClB,kBAAmB,wCACnB,iBAAkB,sDAUPC,GAAgBvG,YAAU,CACrCC,YAAa,gBACbC,UAAWC,YAAe,CAAEC,QATd,kDAUdC,UAAW,SAACC,GAAO,MAAM,CACvBkG,cAAelG,EAAQE,MAAM,CAC3BA,MAAO,SAAAM,GAAA,IAAG2F,EAAY3F,EAAZ2F,aAAchG,EAAKK,EAALL,MAAK,MAVH,CAC9BZ,IAUoB,aAADa,OACE+F,EAAY,uDAAA/F,OAAsDD,GAVvFX,QAASwG,GAWF,IAEN,IAGYI,GAA0BH,GAA1BG,sBCpBPvB,GAAgB1I,IAAhB0I,KAAMzI,GAAUD,IAAVC,MACNiK,GAAWC,KAAXD,OACFE,GACJ,sEA+Ea/B,GA9EF,SAAHhE,GAAwB,IAADsD,EAAjB9C,EAAUR,EAAVQ,WACd/D,EAAwCC,mBAAS,kBAAiBC,EAAAC,YAAAH,EAAA,GAA3DkJ,EAAYhJ,EAAA,GAAEqJ,EAAerJ,EAAA,GAC9BgD,EAAQa,EAAa,EAAI,GACvBG,EAAST,EAAmB,KAA5BS,KACRsF,EAAyCL,GAAsB,CAC7DD,aAAcA,EACdhG,UAFYuG,EAAUD,EAAhBtF,KAAkBC,EAAUqF,EAAVrF,WAI1B7D,EAAwBL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAzBC,EAAA,GAASA,EAAA,GAEpB,OAAI4D,EAAmBlF,cAAC2E,EAAM,IAE5B3E,cAAA+F,WAAA,CAAAhG,SACED,eAACwG,IAAG,CAACC,OAAQ,CAAC,GAAI,IAAIxG,SAAA,EAClB+E,GACA9E,cAAC4G,IAAG,CAACmB,KAAM,GAAGhI,SACZD,eAACsK,KAAM,CACLK,YAAU,EACVtK,UAAU,cACV8F,YAAY,sBACZyE,iBAAiB,WACjBxE,SAAU,SAACG,GAAK,OAAKiE,EAAgBjE,EAAM,EAC3CsE,aAAc,SAACC,EAAOC,GAAM,OAC1BA,EAAO9K,SAAS8F,cAAciF,QAAQF,EAAM/E,gBAAkB,CAAC,EAChE9F,SAAA,CAEDC,cAACmK,GAAM,CAAC9D,MAAM,iBAAgBtG,SAAC,mBAC1B,OAAJkF,QAAI,IAAJA,GAAU,QAAN2C,EAAJ3C,EAAMA,YAAI,IAAA2C,OAAN,EAAJA,EAAYnC,MAAMiB,KAAI,SAACf,GAAI,OAC1B3F,cAACmK,GAAM,CAAC9D,MAAOV,EAAKC,KAAK7F,SAAE4F,EAAKC,MAAc,SAKrD4E,EAAWnE,MAAMK,KAAI,SAACqE,EAAMC,GAAC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC5BtL,cAAC4G,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEhH,SACzBC,cAACyG,IAAI,CAACa,WAAS,EAACnH,UAAU,YAAWJ,SACnCD,eAAA,KAAGyL,KAAMR,EAAK1H,IAAK+C,OAAO,SAASoF,IAAI,aAAYzL,SAAA,CACjDD,eAAA,OAAKK,UAAU,uBAAsBJ,SAAA,CACnCC,cAACE,GAAK,CAACC,UAAU,aAAakC,MAAO,EAAEtC,SACpCgL,EAAKnF,OAER5F,cAAA,OACEY,KAAS,OAAJmK,QAAI,IAAJA,GAAW,QAAPE,EAAJF,EAAMxB,aAAK,IAAA0B,GAAW,QAAXC,EAAXD,EAAaQ,iBAAS,IAAAP,OAAlB,EAAJA,EAAwBQ,aAAcrB,GAC3ChD,IAAI,OACJ9G,MAAO,CAAEoL,SAAU,QAASC,UAAW,cAG3C5L,cAAA,KAAAD,SACGgL,EAAKpB,YAAc,IAAG,GAAAzF,OAChB6G,EAAKpB,YAAYkC,UAAU,EAAG,KAAI,OACrCd,EAAKpB,cAEX7J,eAAA,OAAKK,UAAU,qBAAoBJ,SAAA,CACjCD,eAAA,OAAAC,SAAA,CACEC,cAACmC,IAAM,CACLvB,KACkB,QAAhBuK,EAAAJ,EAAKe,SAAS,UAAE,IAAAX,GAAO,QAAPC,EAAhBD,EAAkB5B,aAAK,IAAA6B,GAAW,QAAXC,EAAvBD,EAAyBK,iBAAS,IAAAJ,OAAlB,EAAhBA,EAAoCK,aACpCrB,GAEFhD,IAAI,SAENrH,cAAC2I,GAAI,CAACxI,UAAU,gBAAeJ,SACZ,QADYuL,EAC5BP,EAAKe,SAAS,UAAE,IAAAR,OAAA,EAAhBA,EAAkB1F,UAGvB5F,cAAC2I,GAAI,CAAA5I,SACFgM,KAAOhB,EAAKiB,eAAeC,QAAQ,MAAMC,qBAhCnBlB,EAqC3B,QAKhB,E,yFCzEAmB,KAAQC,SACNC,KACAC,KACAC,KACAC,KACAtM,KACAuM,KACAC,MAGF,I,GAwDeC,GAxDG,SAAHrI,GAAiD,IAADsI,EAA1CC,EAAWvI,EAAXuI,YAAaC,EAAYxI,EAAZwI,aAAcC,EAAQzI,EAARyI,SACxCC,EAAY,GACZC,EAAgB,GACtBC,QAAQC,IAAIN,GACZ,IAAK,IAAI7B,GAAe,OAAX6B,QAAW,IAAXA,GAAiB,QAANO,EAAXP,EAAa5H,YAAI,IAAAmI,GAAS,QAATC,EAAjBD,EAAmBE,eAAO,IAAAD,OAAf,EAAXA,EAA4B7G,QAAS,EAAGwE,GAAI,EAAIA,GAAK,EAAG,CAAC,IAADoC,EAAAC,EAAAE,EAAAC,EACnER,EAAUS,KAAgB,OAAXZ,QAAW,IAAXA,GAAiB,QAANU,EAAXV,EAAa5H,YAAI,IAAAsI,OAAN,EAAXA,EAAmBD,QAAQtC,GAAGxD,OAC7CyF,EAAcQ,KACZ,IAAIC,KAA6C,KAA7B,OAAXb,QAAW,IAAXA,GAAiB,QAANW,EAAXX,EAAa5H,YAAI,IAAAuI,OAAN,EAAXA,EAAmBF,QAAQtC,GAAG2C,YAAgBC,mBAAmB,SAE9E,CAGA,IAAM3I,EAAO,CACX4I,OAAQZ,EACRa,SAAU,CACR,CACEC,MAAO,eACP9I,KAAM+H,EACNgB,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAgBnB,OACEpO,eAAAiG,WAAA,CAAAhG,SAAA,CACED,eAACwG,IAAG,CAACnG,UAAU,eAAcJ,SAAA,CAC3BD,eAACG,IAAWC,MAAK,CAACmC,MAAO,EAAGlC,UAAU,cAAaJ,SAAA,CAChDgN,EAAS,eAAa,OAEzBjN,eAAC8G,IAAG,CAACzG,UAAU,kBAAiBJ,SAAA,CAC9BD,eAACG,IAAWC,MAAK,CAACmC,MAAO,EAAGlC,UAAU,eAAcJ,SAAA,CAAC,WAC/B,OAAX8M,QAAW,IAAXA,GAAiB,QAAND,EAAXC,EAAa5H,YAAI,IAAA2H,OAAN,EAAXA,EAAmBlF,OAAO,OAErC5H,eAACG,IAAWC,MAAK,CAACmC,MAAO,EAAGlC,UAAU,gBAAeJ,SAAA,CAAC,WAC3CgN,EAAS,aAAWD,WAInC9M,cAACmO,KAAI,CAAClJ,KAAMA,EAAMmJ,QA1BN,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,WAwBzB,ECvDQtO,GAAgBD,IAAhBC,MAAOyI,GAAS1I,IAAT0I,KACPwB,GAAWC,KAAXD,OAmKOsE,GAjKO,WAAO,IAAD7G,EAClBxD,EAAWsK,cAAXtK,OACRrD,EAAoCC,mBAAS,OAAMC,EAAAC,YAAAH,EAAA,GAA5CwD,EAAUtD,EAAA,GAAE0N,EAAa1N,EAAA,GAEhC2N,EAA6BnK,EAAyBL,GAA9Ca,EAAI2J,EAAJ3J,KAAMC,EAAU0J,EAAV1J,WACA2H,EAAgBnI,EAAyB,CACrDN,SACAG,eAFMU,KAKF4J,EAAoB,OAAJ5J,QAAI,IAAJA,GAAU,QAAN2C,EAAJ3C,EAAMA,YAAI,IAAA2C,OAAN,EAAJA,EAAYjC,KAElC,GAAIT,EAAY,OAAOlF,cAAC2E,EAAM,IAC9B,IAEMmD,EAAQ,CACZ,CACEb,MAAO,eACPZ,MAAM,KAADnC,OAAO2K,EAAcrH,OAASD,IAAQsH,EAAcrH,QACzD3G,KAAMb,cAAC8O,KAAoB,KAE7B,CAAE7H,MAAO,OAAQZ,MAAOwI,EAAc3H,KAAMrG,KAAMb,cAAC+O,KAAc,KACjE,CACE9H,MAAO,aACPZ,MAAM,KAADnC,OAAO2K,EAAc,cAAgBtH,IAAQsH,EAAc,eAChEhO,KAAMb,cAACgP,KAAmB,KAE5B,CACE/H,MAAO,aACPZ,MAAM,KAADnC,OAAO2K,EAAcpH,WAAaF,IAAQsH,EAAcpH,YAC7D5G,KAAMb,cAAC8O,KAAoB,KAE7B,CACE7H,MAAO,4BACPZ,MAAM,KAADnC,OAAOqD,IAAQsH,EAAcI,YAAYzH,QAC9C3G,KAAMb,cAACkP,KAAc,MAInBC,EAAe,CACnB,CACElI,MAAO,oBACPZ,MAAOwI,EAAcO,gBACrBvO,KAAMb,cAACgD,IAAY,KAErB,CACEiE,MAAO,sBACPZ,MAAOwI,EAAcQ,kBACrBxO,KAAMb,cAACiD,IAAoB,KAE7B,CACEgE,MAAO,kBACPZ,MAAOwI,EAAcS,OAAOC,UAC1BvP,cAACwP,KAAa,IAEdxP,cAACyP,KAAY,IAEf5O,KAAMb,cAAC0P,KAAyB,KAElC,CACEzI,MAAO,eACPZ,MAAM,KAADnC,OAAOqD,IAAQsH,EAAcS,OAAOK,cACzC9O,KAAMb,cAAC0P,KAAyB,KAElC,CACEzI,MAAO,qBACPZ,MAAM,KAADnC,OAAOqD,IAAQsH,EAAcS,OAAOK,cACzC9O,KAAMb,cAAC0P,KAAyB,MAGpC,OACE1P,cAAA+F,WAAA,CAAAhG,SACED,eAAC8G,IAAG,CAACzG,UAAU,wBAAuBJ,SAAA,CACpCD,eAAC8G,IAAG,CAACzG,UAAU,yBAAwBJ,SAAA,CACrCD,eAACI,GAAK,CAACmC,MAAO,EAAGlC,UAAU,YAAWJ,SAAA,CACnC8O,EAAcjJ,KAAK,KAAGiJ,EAAce,OAAO,aAE9C9P,eAAA,KAAAC,SAAA,CACG8O,EAAcjJ,KAAK,iFAIxB5F,cAACoK,KAAM,CACLyF,aAAa,KACb1P,UAAU,oBACV8F,YAAY,qBACZC,SAAU,SAACG,GAAK,OAAKsI,EAActI,EAAM,EAACtG,SAzErC,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,MA2E5C2G,KAAI,SAACoJ,GAAI,OACb9P,cAACmK,GAAM,CAAApK,SAAa+P,GAAPA,EAAqB,MAGtC9P,cAAC2M,GAAS,CACRE,YAAaA,EACbC,aAAcvF,IAAQsH,EAAcrH,OACpCuF,SAAU8B,EAAcjJ,OAE1B9F,eAAC8G,IAAG,CAACzG,UAAU,kBAAiBJ,SAAA,CAC9BD,eAAC8G,IAAG,CAACzG,UAAU,wBAAuBJ,SAAA,CACpCD,eAAC8G,IAAG,CAACzG,UAAU,gCAA+BJ,SAAA,CAC5CD,eAACI,GAAK,CAACmC,MAAO,EAAGlC,UAAU,wBAAuBJ,SAAA,CAC/C8O,EAAcjJ,KAAK,uBAEtB9F,eAAA,KAAAC,SAAA,CAAG,uCAAqC8O,EAAcjJ,WAEvDkC,EAAMpB,KAAI,SAAApC,GAAA,IAAGzD,EAAIyD,EAAJzD,KAAMoG,EAAK3C,EAAL2C,MAAOZ,EAAK/B,EAAL+B,MAAK,OAC9BvG,eAAC8G,IAAG,CAACzG,UAAU,aAAYJ,SAAA,CACzBD,eAAC8G,IAAG,CAACzG,UAAU,kBAAiBJ,SAAA,CAC9BC,cAAC2I,GAAI,CAAA5I,SAAEc,IACPb,cAAC2I,GAAI,CAAA5I,SAAEkH,OAETjH,cAAC2I,GAAI,CAACxI,UAAU,QAAOJ,SAAEsG,MACrB,OAGVvG,eAAC8G,IAAG,CAACzG,UAAU,mBAAkBJ,SAAA,CAC/BD,eAAC8G,IAAG,CAACzG,UAAU,gCAA+BJ,SAAA,CAC5CC,cAACE,GAAK,CAACmC,MAAO,EAAGlC,UAAU,wBAAuBJ,SAAC,qBAGnDC,cAAA,KAAAD,SAAG,6DAEJoP,EAAazI,KAAI,SAAAqJ,GAAA,IAAGlP,EAAIkP,EAAJlP,KAAMoG,EAAK8I,EAAL9I,MAAOZ,EAAK0J,EAAL1J,MAAK,OACrCvG,eAAC8G,IAAG,CAACzG,UAAU,aAAYJ,SAAA,CACzBD,eAAC8G,IAAG,CAACzG,UAAU,kBAAiBJ,SAAA,CAC9BC,cAAC2I,GAAI,CAAA5I,SAAEc,IACPb,cAAC2I,GAAI,CAAA5I,SAAEkH,OAETjH,cAAC2I,GAAI,CAACxI,UAAU,QAAOJ,SAAEsG,MACrB,UAIZvG,eAAC8G,IAAG,CAACzG,UAAU,iBAAgBJ,SAAA,CAC7BC,cAACsG,IAAG,CAACnG,UAAU,YAAWJ,SACxBD,eAACI,GAAK,CAACmC,MAAO,EAAGlC,UAAU,uBAAsBJ,SAAA,CAAC,WACvC8O,EAAcjJ,KACtBoK,YAAgBnB,EAAclF,kBAGnC7J,eAAC8G,IAAG,CAACzG,UAAU,aAAYJ,SAAA,CACzBD,eAACI,GAAK,CAACmC,MAAO,EAAGlC,UAAU,uBAAsBJ,SAAA,CAC9C8O,EAAcjJ,KAAK,YAErBiJ,EAAcoB,MAAMvJ,KAAI,SAACwJ,GAAI,OAC5BpQ,eAACwG,IAAG,CAACnG,UAAU,YAAWJ,SAAA,CACxBC,cAACE,GAAK,CAACmC,MAAO,EAAGlC,UAAU,YAAWJ,SACnCmQ,EAAKC,OAERnQ,cAAA,KAAGuL,KAAM2E,EAAK7M,IAAK+C,OAAO,SAASoF,IAAI,aAAYzL,SAChDmQ,EAAKtK,SALsBsK,EAAKtK,KAO/B,cAOpB,ECzHewK,GAhDG,WAChB,OACEtQ,eAAA,OAAKK,UAAU,MAAKJ,SAAA,CAClBC,cAAA,OAAKG,UAAU,SAAQJ,SACrBC,cAACc,EAAM,MAEThB,eAAA,OAAKK,UAAU,OAAMJ,SAAA,CACnBC,cAACqQ,IAAM,CAAAtQ,SACLC,cAAA,OAAKG,UAAU,SAAQJ,SACrBD,eAACwQ,IAAM,CAAAvQ,SAAA,CACLC,cAACuQ,IAAK,CAACC,KAAK,gBAAezQ,SACzBC,cAAC2H,EAAQ,MAEX3H,cAACuQ,IAAK,CAACC,KAAK,0BAAyBzQ,SACnCC,cAAC8I,GAAS,MAEZ9I,cAACuQ,IAAK,CAACC,KAAK,iCAAgCzQ,SAC1CC,cAAC6E,EAAgB,MAEnB7E,cAACuQ,IAAK,CAACC,KAAK,+BAA8BzQ,SACxCC,cAACyO,GAAa,MAEhBzO,cAACuQ,IAAK,CAACC,KAAK,qBAAoBzQ,SAC9BC,cAACsI,GAAI,aAMbxI,eAAA,OAAKK,UAAU,SAAQJ,SAAA,CACrBD,eAACG,IAAWC,MAAK,CACfmC,MAAO,EACP9B,MAAO,CAAEkQ,MAAO,QAASC,UAAW,UAAW3Q,SAAA,CAChD,gBACcC,cAAA,SAAM,6BAGrBF,eAAC6Q,IAAK,CAAA5Q,SAAA,CACJC,cAACsC,IAAI,CAACC,GAAG,gBAAexC,SAAC,SACzBC,cAACsC,IAAI,CAACC,GAAG,0BAAyBxC,SAAC,cACnCC,cAACsC,IAAI,CAACC,GAAG,qBAAoBxC,SAAC,oBAM1C,E,UC5Ce6Q,GAZH,WACV,IAAA7P,EAAuBC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAA9B8P,EAAI5P,EAAA,GAAC6P,EAAO7P,EAAA,GACnB,OAAI4P,EAEG/Q,eAAAiG,WAAA,CAAAhG,SAAA,CACLC,cAACH,EAAI,IACLG,cAACwC,IAAM,CAACrC,UAAU,MAAMsC,QAAS,kBAAIqO,GAAQ,EAAM,EAAC/Q,SAChDC,cAAC+Q,KAAgB,SAJf/Q,cAACoQ,GAAS,GAOpB,E,iBCVeY,gBAAe,CAC5BC,SAAOC,GAAA,GAAAC,aAAAD,GACJ3N,EAAUE,YAAcF,EAAU0N,SAAOE,aAAAD,GACzCnH,GAActG,YAAcsG,GAAckH,SAAOE,aAAAD,GACjD1I,EAAa/E,YAAc+E,EAAayI,SAAOC,IAElDE,WAAY,SAACC,GAAoB,OAC3BA,IAAuBnN,OAAOX,EAAU6N,WAAWrH,GAAcqH,WAAW5I,EAAa4I,WAAW,I,OCH5GE,IAASC,OACPvR,cAACwR,IAAM,CAACC,SAAS,0BAAyB1R,SACxCC,cAAC0R,IAAQ,CAACC,MAAOA,GAAM5R,SACrBC,cAAC4Q,GAAG,QAGRgB,SAASC,eAAe,Q","file":"static/js/main.be567558.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1_HTC1oMKYwC7a8vUBsiplhw.3abbe14a.gif\";","import { Button, Image, Typography } from 'antd'\r\nimport React from 'react'\r\nimport \"../home.css\"\r\nimport icon from \"../images/1_HTC1oMKYwC7a8vUBsiplhw.gif\"\r\nimport { UpCircleOutlined } from '@ant-design/icons'\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Typography.Title className='tite'>\r\n        Explore the world of Crypto\r\n      </Typography.Title>\r\n      <Image height={'100vh'} width={'100vw'} style={{zIndex:'-1',position:'fixed', top:'0', left: '0'}} src={icon} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport icon from \"../images/cryptocurrency.png\";\r\nconst NavBar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n  const [clicked,setClicked] = useState(0)\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize,clicked]);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/Cryptosphere\">Cryptosphere</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link onClick={()=> setClicked((last)=>last+1)} to=\"/Cryptosphere\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link onClick={()=> setClicked((last)=>last+1)} to=\"/Cryptosphere/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link onClick={()=> setClicked((last)=>last+1)} to=\"/Cryptosphere/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link onClick={()=> setClicked((last)=>last+1)} to=\"/Cryptosphere/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history?timePeriod=${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 96;\r\n\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n  if (isFetching) return <Loader/>;\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n      {cryptos?.length == 0 ? <Card className=\"noresult\">No results to show at the moment</Card> : cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.uuid}>\r\n            <Link to={`/Cryptosphere/crypto/${currency.uuid}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"coin\" />}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}% </p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title } = Typography;\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  if (isFetching) return <Loader/>;\r\n  const globalStats = data?.data?.stats;\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrenices\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/Cryptosphere/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/Cryptosphere/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst exchangesApiHeaders = {\r\n    'X-RapidAPI-Host': 'coingecko.p.rapidapi.com',\r\n    'X-RapidAPI-Key': 'fac9c967f1mshb0891bed0d223f5p1f977fjsnd9031551ed8e'\r\n};\r\n\r\nconst baseUrl = \"https://coingecko.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: exchangesApiHeaders,\r\n});\r\n\r\nexport const exchangesApi = createApi({\r\n  reducerPath: \"exchangesApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(`/exchanges`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetExchangesQuery } = exchangesApi;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nimport { useGetExchangesQuery } from \"../services/exchangesApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data: cryptoExchanges, isFetching } = useGetExchangesQuery();\r\n  if (isFetching) return <Loader />;\r\n  const exchangesList = cryptoExchanges;\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>Year Established</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Trust Score</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse accordion>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.trust_score_rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className=\"exchange-image\"\r\n                        src={exchange.image}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={7}>{exchange.year_established}</Col>\r\n                    <Col span={6}>{millify(exchange.trade_volume_24h_btc)}</Col>\r\n                    <Col span={5}>{exchange.trust_score}</Col>\r\n                  </Row>\r\n                }\r\n              >\r\n                {exchange?.description || `${exchange?.country} - ${exchange?.url}` || \"\"}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst cryptoNewsApiHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com/news\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com/news\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoNewsApiHeaders,\r\n});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\nconst demoImage =\r\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const count = simplified ? 6 : 12;\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory: newsCategory,\r\n    count,\r\n  });\r\n  const [news, setNews] = useState([]);\r\n\r\n  if (isFetching) return <Loader/>;\r\n  return (\r\n    <>\r\n      <Row gutter={[24, 24]}>\r\n        {!simplified && (\r\n          <Col span={24}>\r\n            <Select\r\n              showSearch\r\n              className=\"select-news\"\r\n              placeholder=\"Select a new Crypto\"\r\n              optionFilterProp=\"children\"\r\n              onChange={(value) => setNewsCategory(value)}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n              {data?.data?.coins.map((coin) => (\r\n                <Option value={coin.name}>{coin.name}</Option>\r\n              ))}\r\n            </Select>\r\n          </Col>\r\n        )}\r\n        {cryptoNews.value.map((news, i) => (\r\n          <Col xs={24} sm={12} lg={8} key={i}>\r\n            <Card hoverable className=\"news-card\">\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news-image-container\">\r\n                  <Title className=\"news-title\" level={4}>\r\n                    {news.name}\r\n                  </Title>\r\n                  <img\r\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                    alt=\"news\"\r\n                    style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {news.description > 100\r\n                    ? `${news.description.substring(0, 100)}...`\r\n                    : news.description}\r\n                </p>\r\n                <div className=\"provider-container\">\r\n                  <div>\r\n                    <Avatar\r\n                      src={\r\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                        demoImage\r\n                      }\r\n                      alt=\"news\"\r\n                    />\r\n                    <Text className=\"provider-name\">\r\n                      {news.provider[0]?.name}\r\n                    </Text>\r\n                  </div>\r\n                  <Text>\r\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                  </Text>\r\n                </div>\r\n              </a>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n  console.log(coinHistory)\r\n  for (let i = coinHistory?.data?.history?.length - 1; i >=0 ; i -= 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp*1000).toLocaleDateString(\"en-UK\")\r\n    );\r\n  }\r\n  \r\n  \r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Typography.Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{\" \"}\r\n        </Typography.Title>\r\n        <Col className=\"price-container\">\r\n          <Typography.Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Typography.Title>\r\n          <Typography.Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"24h\");\r\n\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader/>;\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"3m\", \"1y\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails[\"24hVolume\"] && millify(cryptoDetails[\"24hVolume\"])}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.supply.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Col className=\"coin-detail-container\">\r\n        <Col className=\"coin-heading-container\">\r\n          <Title level={2} className=\"coin-name\">\r\n            {cryptoDetails.name} ({cryptoDetails.symbol}) Price\r\n          </Title>\r\n          <p>\r\n            {cryptoDetails.name} live price in us dollars. View value\r\n            statistics, market cap and supply.\r\n          </p>\r\n        </Col>\r\n        <Select\r\n          defaultValue=\"7d\"\r\n          className=\"select-timeperiod\"\r\n          placeholder=\"Select Time Period\"\r\n          onChange={(value) => setTimePeriod(value)}\r\n        >\r\n          {time.map((date) => (\r\n            <Option key={date}>{date}</Option>\r\n          ))}\r\n        </Select>\r\n        <LineChart\r\n          coinHistory={coinHistory}\r\n          currentPrice={millify(cryptoDetails.price)}\r\n          coinName={cryptoDetails.name}\r\n        />\r\n        <Col className=\"stats-container\">\r\n          <Col className=\"coin-value-statistics\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                {cryptoDetails.name} Value Statistics\r\n              </Title>\r\n              <p>An overview of showing the stats of {cryptoDetails.name}</p>\r\n            </Col>\r\n            {stats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n          <Col className=\"other-stats-info\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                Other Statistics\r\n              </Title>\r\n              <p>An overview showing the stats of all cryptocurrencies</p>\r\n            </Col>\r\n            {genericStats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n        <Col className=\"coin-desc-link\">\r\n          <Row className=\"coin-desc\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              What is {cryptoDetails.name}\r\n              {HTMLReactParser(cryptoDetails.description)}\r\n            </Title>\r\n          </Row>\r\n          <Col className=\"coin-links\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Links\r\n            </Title>\r\n            {cryptoDetails.links.map((link) => (\r\n              <Row className=\"coin-link\" key={link.name}>\r\n                <Title level={5} className=\"link-name\">\r\n                  {link.type}\r\n                </Title>\r\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                  {link.name}\r\n                </a>\r\n              </Row>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import React from \"react\";\r\nimport {  Route, Link, Routes } from \"react-router-dom\";\r\n\r\nimport { Layout, Typography, Space } from \"antd\";\r\nimport \"../App.css\";\r\nimport {\r\n  NavBar,\r\n  Exchanges,\r\n  Homepage,\r\n  Example,\r\n  Cryptocurrencies,\r\n  News,\r\n  CryptoDetails,\r\n} from \"./\";\r\nimport Home from \"./Home\";\r\n\r\nconst AllRoutes = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <NavBar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Routes>\r\n              <Route path=\"/Cryptosphere\">\r\n                <Homepage />\r\n              </Route>\r\n              <Route path=\"/Cryptosphere/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route path=\"/Cryptosphere/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route path=\"/Cryptosphere/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route path=\"/Cryptosphere/news\">\r\n                <News />\r\n              </Route>\r\n            </Routes>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Cryptosphere <br />\r\n            All rights not reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/Cryptosphere\">Home</Link>\r\n            <Link to=\"/Cryptosphere/exchanges\">Exchanges</Link>\r\n            <Link to=\"/Cryptosphere/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllRoutes;\r\n","import React, { useState } from 'react'\r\nimport Home from './components/Home'\r\nimport AllRoutes from './components/AllRoutes'\r\nimport { Button } from 'antd'\r\nimport { UpCircleOutlined } from '@ant-design/icons'\r\n\r\nconst App = () => {\r\n  const [show,setShow] = useState(true)\r\n  if(!show)\r\n   return <AllRoutes />\r\n  return <>\r\n    <Home />\r\n    <Button className='but' onClick={()=>setShow(false)}>\r\n        <UpCircleOutlined />\r\n      </Button>\r\n  </>\r\n}\r\n\r\nexport default App","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\nimport {exchangesApi} from \"../services/exchangesApi\"\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    [exchangesApi.reducerPath]: exchangesApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware().concat(cryptoApi.middleware,cryptoNewsApi.middleware,exchangesApi.middleware),\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <Router basename='/cryptosphere.github.io'>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}